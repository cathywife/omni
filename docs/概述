作用
    1、建立基础数据关系链及数据维护机制, 使基础数据准确、可靠。
    2、实现一键化运维操作, 减少人肉数据检索、输入、校验频率和人肉操作频率, 从而降低出错概率
    3、尽量减少登录服务器概率, 包括业务运维及产研人员
    4、通过可视化界面, 向运维和产研展示业务集群相关信息, 使相关信息更透明化, 减少沟通成本, 并提高发现错误的速度, 进而减少出错概率。

    减少人肉、简化沟通、提高能效



模块
    1、基础数据结构
    2、restful API
    3、任务管理
    4、视图
    5、配置管理

功能:
    1、通过API提供数据检索
    2、通过web 视图展示泳道、项目架构、集群架构、主机组、APP等相关信息, 包括: 容量、状态、配置、版本等。
    3、泳道、业务集群、主机组、APP的配置管理
    4、刚需功能: 服务器申请、集群资源调度、服务部署、配置调整、服务下线、资源回收
    5、goproxy/tengine/httpizza/gateway等中间件管理


技术方案
    语言: Python
    后端框架: Django + Django-rest-framework
    前端框架: JQuery + bootstrap + Django Form
    前端模板语言: django
    前端模板: AdminLTE
    异步框架: Celery + redis
    数据库: Mysql

    任务执行: EOC + EWF
    基础数据: CMDB
    业务配置获取及变更: husker + eless
    服务离/上线: husker + 健康检查机制(tengine/gateway)




优先:
    以APPID为维度, 主机、型号、中间件(redis/dal/rmq)、goproxy注册、研发负责人、运维负责人



