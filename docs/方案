前端动静分离方案:
    1、用户访问http://server_name/index.html, 加载首页
    2、前端js加载特定URL, 并传递参数, 告诉后端加载哪个模板
    3、后端实现一个通用模板视图, 接收一个参数, 渲染对应模板, 返回
    4、所有数据加载和操作, 都通过RestFulAPI实现

    通过django-rest-framework的format参数控制, http://server_name/path/to/api/?format=template, 进行模板渲染

URL规范:
    /objects    GET/POST/PUT/PATCH     list
    /objects/{pk}/      GET/POST/PUT/PATCH     detail


获取关联对象数据:
    ?relation-fields=field,field

分页:
    ?page=number    请求分页
    ?page=off       关闭分页
    ?page-size=number   分页大小



数据结构:
    使用ForeignKey、ManyToMany、OneToOne关系, 不使用数据库约束
    通过select_related 和 prefetch_related预载来实现数据库查询优化
    Select控件问题, 在Form中针对ForeignKey、ManyToMany、OneToOne关系, 手动指定ChoiceField来解决,不使用默认的ModelChoiceField 和ModelMultipleChoiceField
    django-rest-framework中的ManyToMany关系为read-only, 需在变更数据时, 编写方法覆盖默认方法, 维护关系表
    为实现关系表中, 维护数据变更记录, 需对所有的ManyToMany关系, 独立建立model(包含create_time、update_time), 并通过through制定


response数据结构:
    {
    count: 1000,
    results: [
        {'id': 1, 'key': 'value', '__url__': '/arch/clusters/templates/1/versions/2'}
    ]
    }

组名      产品      项目  AppID           是否属组    权限
外卖ops   eleme   eleme  biz.shopping     yes
外卖研发    eleme   eleme                   no      readonly
